name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Run tests
      run: npm run test:ci
    
    - name: Test CLI help
      run: node dist/cli.js --help
    
    - name: Test CLI capture (dry run)
      run: timeout 5s node dist/cli.js start || true

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Check for Docker Hub credentials
      id: check-dockerhub
      run: |
        if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
          echo "dockerhub-available=true" >> $GITHUB_OUTPUT
        else
          echo "dockerhub-available=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Login to Docker Hub
      if: steps.check-dockerhub.outputs.dockerhub-available == 'true'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      if: steps.check-dockerhub.outputs.dockerhub-available == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          haybaler/letsfixthis:latest
          haybaler/letsfixthis:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build Docker image (no push)
      if: steps.check-dockerhub.outputs.dockerhub-available == 'false'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: haybaler/letsfixthis:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
